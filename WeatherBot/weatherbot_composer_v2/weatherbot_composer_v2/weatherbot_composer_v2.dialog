{
  "$kind": "Microsoft.AdaptiveDialog",
  "$designer": {
    "$designer": {
      "name": "weatherbot_composer_v2",
      "description": "",
      "id": "aJv4r7"
    }
  },
  "autoEndDialog": true,
  "defaultResultProperty": "dialog.result",
  "triggers": [
    {
      "$kind": "Microsoft.OnConversationUpdateActivity",
      "$designer": {
        "id": "376720",
        "name": "WelcomeTheUser"
      },
      "actions": [
        {
          "$kind": "Microsoft.Foreach",
          "$designer": {
            "id": "518944",
            "name": "Loop: for each item"
          },
          "itemsProperty": "turn.Activity.membersAdded",
          "actions": [
            {
              "$kind": "Microsoft.IfCondition",
              "$designer": {
                "id": "641773",
                "name": "Branch: if/else"
              },
              "condition": "string(dialog.foreach.value.id) != string(turn.Activity.Recipient.id)",
              "actions": [
                {
                  "$kind": "Microsoft.SendActivity",
                  "$designer": {
                    "id": "859266",
                    "name": "Send a response"
                  },
                  "activity": "${SendActivity_Welcome()}"
                }
              ]
            }
          ],
          "value": "dialog.foreach.value"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "DZhmF5",
        "name": "weather"
      },
      "intent": "weather",
      "condition": "#Weather.Score >= 0.6",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "lU6zBh"
          },
          "activityProcessed": true,
          "dialog": "getWeather"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "xf2gbh",
        "name": "cancel"
      },
      "intent": "cancel",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "fjan8l"
          },
          "activityProcessed": true,
          "dialog": "cancel"
        }
      ],
      "condition": "#Cancel.Score > 0.8"
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "QRK8pL",
        "name": "help"
      },
      "intent": "help",
      "condition": "#Help.Score >= 0.8",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "ObDMvg"
          },
          "activityProcessed": true,
          "dialog": "help"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnUnknownIntent",
      "$designer": {
        "id": "DIi2lf"
      },
      "actions": [
        {
          "$kind": "Microsoft.SendActivity",
          "$designer": {
            "id": "cPzG5m"
          },
          "activity": "${SendActivity_cPzG5m()}"
        },
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "z3XJP9"
          },
          "activityProcessed": true,
          "dialog": "help"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "DNKQLN",
        "name": "graph"
      },
      "intent": "graph",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "aURw0Y"
          },
          "activityProcessed": true,
          "dialog": "Graph"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnQnAMatch",
      "$designer": {
        "id": "zf9P8y"
      },
      "actions": [
        {
          "$kind": "Microsoft.IfCondition",
          "$designer": {
            "id": "eCY0xQ"
          },
          "condition": "count(turn.recognized.answers[0].context.prompts) > 0",
          "actions": [
            {
              "$kind": "Microsoft.SetProperty",
              "$designer": {
                "id": "UOAGUT"
              },
              "property": "dialog.qnaContext",
              "value": "=turn.recognized.answers[0].context.prompts"
            },
            {
              "$kind": "Microsoft.TextInput",
              "$designer": {
                "id": "cuhUzC"
              },
              "maxTurnCount": 3,
              "alwaysPrompt": true,
              "allowInterruptions": false,
              "prompt": "${TextInput_Prompt_hOVztW()}",
              "property": "turn.qnaMultiTurnResponse"
            },
            {
              "$kind": "Microsoft.SetProperty",
              "$designer": {
                "id": "WEBXrJ"
              },
              "property": "turn.qnaMatchFromContext",
              "value": "=where(dialog.qnaContext, item, item.displayText == turn.qnaMultiTurnResponse)"
            },
            {
              "$kind": "Microsoft.DeleteProperty",
              "$designer": {
                "id": "V8Mj4v"
              },
              "property": "dialog.qnaContext"
            },
            {
              "$kind": "Microsoft.IfCondition",
              "$designer": {
                "id": "KMZ3LN"
              },
              "condition": "turn.qnaMatchFromContext && count(turn.qnaMatchFromContext) > 0",
              "actions": [
                {
                  "$kind": "Microsoft.SetProperty",
                  "$designer": {
                    "id": "FzmXln"
                  },
                  "property": "turn.qnaIdFromPrompt",
                  "value": "=turn.qnaMatchFromContext[0].qnaId"
                }
              ]
            },
            {
              "$kind": "Microsoft.EmitEvent",
              "$designer": {
                "id": "mE3aUH"
              },
              "eventName": "activityReceived",
              "eventValue": "=turn.activity"
            }
          ],
          "elseActions": [
            {
              "$kind": "Microsoft.SendActivity",
              "$designer": {
                "id": "GL5Nxz"
              },
              "activity": "${SendActivity_DlWAua()}"
            }
          ]
        }
      ]
    }
  ],
  "$schema": "https://raw.githubusercontent.com/microsoft/BotFramework-Composer/stable/Composer/packages/server/schemas/sdk.schema",
  "generator": "weatherbot_composer_v2.lg",
  "id": "weatherbot_composer_v2",
  "recognizer": "weatherbot_composer_v2.lu.qna"
}
